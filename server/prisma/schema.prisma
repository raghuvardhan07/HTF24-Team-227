// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Course {
  courseId          String       @id @default(auto()) @map("_id") @db.ObjectId
  courseName        String
  courseDescription String
  studentId         String[]     @db.ObjectId
  teacherId         String       @db.ObjectId
  videos            Video[]
  teacher           Teacher      @relation(fields: [teacherId], references: [id])
  student           Student      @relation(fields: [studentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  assignments       Assignment[]
  quiz              Quiz[]
}

model Student {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  studentName  String
  studentAge   Int
  phoneno      BigInt
  email        String     @unique
  password     String
  courses      Course[]
  profilePhoto String?
  submissionId String     @unique @db.ObjectId
  submission   Submission @relation(fields: [submissionId], references: [id])
}

model Teacher {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  teacherName  String
  teacherAge   Int
  phoneno      BigInt
  email        String   @unique
  password     String
  courses      Course[]
  profilePhoto String?
}

model Video {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  description String
  url         String
  courseId    String @db.ObjectId
  course      Course @relation(fields: [courseId], references: [courseId], onDelete: Cascade)
}

model Assignment {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  url         String
  courseId    String       @db.ObjectId
  course      Course       @relation(fields: [courseId], references: [courseId], onDelete: Cascade)
  deadline    DateTime
  submissions Submission[]
}

model Submission {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  assignmentId String     @db.ObjectId
  assignment   Assignment @relation(fields: [assignmentId], references: [id])
  student      Student?
  url          String
}

model Quiz {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  courseId String @db.ObjectId
  course   Course @relation(fields: [courseId], references: [courseId])
}
